using System;using System.Collections;using System.Collections.Generic;using System.Text.RegularExpressions;using System.Linq;using UnityEngine;using KModkit;public class BamboozlingTalk : MonoBehaviour {public KMBombInfo Bomb;public KMAudio Audio;public KMSelectable button;public TextMesh Weed;int sugma = 75255;static int moduleIdCounter = 1;int moduleId;private bool moduleSolved; public string TwitchHelpMessage = "Use !{0} submit 5 to submit when the last digit of the timer is 5.";void Awake () {moduleId = moduleIdCounter++;button.OnInteract += delegate () { PressButton(); return false; };}void Start () {sugma = UnityEngine.Random.Range(0,122);Weed.text = BoozleTalkElFunne.Phrases[sugma];Debug.LogFormat("[BoozleTalk #{0}] The phrase is: \"{1}\". Submit when the last digit of the time is {2}.", moduleId,BoozleTalkElFunne.Phrases[sugma],sugma % 10);}void PressButton (){button.AddInteractionPunch();GetComponent<KMAudio>().PlayGameSoundAtTransform(KMSoundOverride.SoundEffect.ButtonPress, button.transform);if (sugma % 10 == Math.Floor(Bomb.GetTime()) % 10) {GetComponent<KMBombModule>().HandlePass();Audio.PlaySoundAtTransform("BoozleBitch", transform);Debug.LogFormat("[BoozleTalk #{0}] You submitted on {1}. Module disarmed.", moduleId, Math.Floor(Bomb.GetTime()) % 10);Weed.text = "BOOZLETALK";}else {GetComponent<KMBombModule>().HandleStrike();Debug.LogFormat("[BoozleTalk #{0}] You submitted on {1}. Strike fat lard.", moduleId, Math.Floor(Bomb.GetTime()) % 10);}} IEnumerator ProcessTwitchCommand(string penisEnlargementPill) { penisEnlargementPill = penisEnlargementPill.ToLowerInvariant(); Match m = Regex.Match(penisEnlargementPill, @"submit (\d)"); if (m.Success) { yield return null; while (int.Parse(m.Groups[1].Value) != Math.Floor(Bomb.GetTime()) % 10) { yield return "trycancel"; yield return new WaitForSeconds(.1f); } button.OnInteract(); yield return new WaitForSeconds(.1f); } else yield return "sendtochaterror Valid command is submit. Use !{1} help to see the full command"; yield break; } IEnumerator TwitchHandleForcedSolve() { while((sugma % 10) != Math.Floor(Bomb.GetTime()) % 10) yield return true; button.OnInteract(); } }
